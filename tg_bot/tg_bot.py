import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
import os
from dotenv import load_dotenv

# –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º, –ø—Ä–æ–±—É—é –Ω–æ–≤—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É

# –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
load_dotenv()
TG_BOT_TOKEN = os.getenv('TG_BOT_TOKEN')

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TG_BOT_TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
def get_main_menu():
    keyword = ReplyKeyboardMarkup(resize_keyboard=True)
    buttonStart = KeyboardButton('–°—Ç–∞—Ä—Ç ')
    buttonMenu = KeyboardButton('–ú–µ–Ω—é üëÄ')
    buttonSettings = KeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ü¶æ')
    buttonExit = KeyboardButton('–í—ã—Ö–æ–¥ üôÖ‚Äç‚ôÇÔ∏è')
    keyword.add(buttonStart, buttonMenu, buttonSettings, buttonExit)
    return keyword


# –ö–æ–º–∞–Ω–¥–∞ START
@dp.message(Command("start"))
async def start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π Telegram-–±–æ—Ç üòÑ")
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', reply_markup=menu)

# –ö–æ–º–∞–Ω–¥–∞ HELP
@dp.message(Command("help"))
async def help_messege(message: Message):
    await message.answer("–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: \n/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n", reply_markup=menu)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üññ –°—Ç–∞—Ä—Ç")],
        [KeyboardButton(text="üìã –ú–µ–Ω—é")],
        [KeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å")],
        [KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")],
        [KeyboardButton(text="üòî –í—ã—Ö–æ–¥")],
    ],
    resize_keyboard=True  # –ê–≤—Ç–æ–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
)

@dp.message()
async def button_handler(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–æ–π —Ç–µ–∫—Å—Ç –±—ã–ª –Ω–∞–∂–∞—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
    if message.text == "üññ –°—Ç–∞—Ä—Ç":
        await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É 'üññ –°—Ç–∞—Ä—Ç'")
    elif message.text == "üìã –ú–µ–Ω—é":
        await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É 'üìã –ú–µ–Ω—é'")
    elif message.text == "‚ÑπÔ∏è –û –Ω–∞—Å":
        await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É '‚ÑπÔ∏è –û –Ω–∞—Å'")
    elif message.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'")

if __name__ == '__main__':
    asyncio.run(main())